//------------------------------------------------------------------------------
// <auto-generated>
// 	This code was generated by a tool
// 	Changes to this file will be lost if the code is regenerated.
// EventToCommandHandlerTemplate.t4
// </auto-generated>
//------------------------------------------------------------------------------

#region Copyright
// -----------------------------------------------------------------------
// <copyright company="cdmdotnet Limited">
//     Copyright cdmdotnet Limited. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------
#endregion

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using cdmdotnet.AutoMapper;
using cdmdotnet.Logging;
using Cqrs.Commands;
using Cqrs.Events;
using Cqrs.Domain;

namespace HelloWorld.Domain.Akka.Events.Handlers
{
	/// <summary>
	/// Converts <see cref="HelloWorldSaid"/> to a <see cref="HelloWorld.Domain.Akka.Commands.ReplyToHelloWorldCommand"/> and publish it using <see cref="CommandBus"/>
	/// </summary>
	[GeneratedCode("CQRS UML Code Generator", "1.601.932")]
	public partial class HelloWorldSaidToReplyToHelloWorldEventToCommandHandler
		: IEventHandler<Cqrs.Authentication.SingleSignOnToken, HelloWorldSaid>
	{
		protected ILogger Logger { get; private set; }

		protected IAutomapHelper AutomapHelper { get; private set; }

		/// <summary>
		/// Instantiates the <see cref="HelloWorldSaidToReplyToHelloWorldEventToCommandHandler"/> class.
		/// </summary>
		public HelloWorldSaidToReplyToHelloWorldEventToCommandHandler(ILogger logger, IAutomapHelper automapHelper)
		{
			Logger = logger;
			AutomapHelper = automapHelper;
		}

		protected ICommandPublisher<Cqrs.Authentication.SingleSignOnToken> CommandBus { get; private set; }

		/// <summary>
		/// Instantiates the <see cref="HelloWorldSaidToReplyToHelloWorldEventToCommandHandler"/> class.
		/// </summary>
		public HelloWorldSaidToReplyToHelloWorldEventToCommandHandler(Cqrs.Akka.Commands.IAkkaCommandSender<Cqrs.Authentication.SingleSignOnToken> commandBus, ILogger logger, IAutomapHelper automapHelper)
			: this (logger, automapHelper)
		{
			CommandBus = commandBus;
		}


		#region Implementation of IEventHandler<in HelloWorldSaidToReplyToHelloWorld>

		/// <summary>
		/// Convert the provided <paramref name="@event"/> to a <see cref="HelloWorld.Domain.Akka.Commands.ReplyToHelloWorldCommand"/> and publish it using <see cref="CommandBus"/>
		/// </summary>
		public virtual void Handle(HelloWorldSaid @event)
		{
			HelloWorld.Domain.Akka.Commands.ReplyToHelloWorldCommand command = null;
			OnHandle(@event, ref command);
			if (command != null)
				CommandBus.Publish(command);
			OnHandled(@event);
		}

		#endregion

		partial void OnHandle(HelloWorldSaid @event, ref HelloWorld.Domain.Akka.Commands.ReplyToHelloWorldCommand command);

		partial void OnHandled(HelloWorldSaid @event);
	}
}
