//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#region Copyright
// -----------------------------------------------------------------------
// <copyright company="cdmdotnet Limited">
//     Copyright cdmdotnet Limited. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------
#endregion
using Cqrs.Domain;
using HelloWorld.Domain.Akka;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using System.Runtime.Serialization;
using Cqrs.Commands;
using Cqrs.Messages;

namespace HelloWorld.Domain.Akka.Commands
{
	[GeneratedCode("CQRS UML Code Generator", "1.601.932")]
	public  partial class ReplyToHelloWorldCommand : ICommand<Cqrs.Authentication.SingleSignOnToken>
	{
		#region Implementation of ICommand

		/// <summary>
		/// The Rsn of the <see cref="IAggregateRoot{TAuthenticationToken}">aggregate</see> being targeted.
		/// </summary>
		[DataMember]
		public Guid Id
		{
			get { return Rsn; }
			set { Rsn = value; }
		}

		/// <summary>
		/// The version number you expect this command to shift the <see cref="IAggregateRoot{TAuthenticationToken}">aggregate</see> to. I.E. +1 from what you know it's current version to be.
		/// </summary>
		[DataMember]
		public int ExpectedVersion { get; set; }

		#endregion

		#region Implementation of IMessageWithAuthenticationToken<Cqrs.Authentication.SingleSignOnToken>

		/// <summary>
		/// The authentication token used to identify the requester.
		/// </summary>
		[DataMember]
		public Cqrs.Authentication.SingleSignOnToken AuthenticationToken { get; set; }

		#endregion

		#region Implementation of IMessage

		/// <summary>
		/// The correlation id used to group together events and notifications.
		/// </summary>
		[DataMember]
		public Guid CorrelationId { get; set; }

		[DataMember]
		[Obsolete("Use Frameworks, It's far more flexible and OriginatingFramework")]
		public FrameworkType Framework { get; set; }

		/// <summary>
		/// The originating framework this message was sent from.
		/// </summary>
		[DataMember]
		public string OriginatingFramework { get; set; }

		/// <summary>
		/// The frameworks this <see cref="IMessage"/> has been delivered to/sent via already.
		/// </summary>
		[DataMember]
		public IEnumerable<string> Frameworks { get; set; }

		[Obsolete("Use CorrelationId")]
		[DataMember]
		public Guid CorrolationId
		{
			get { return CorrelationId; }
			set { CorrelationId = value; }
		}

		#endregion

		/// <summary>
		/// The Rsn of the <see cref="IAggregateRoot{TAuthenticationToken}">aggregate</see> being targeted.
		/// </summary>
		[DataMember]
		public Guid Rsn { get; set; }

		[DataMember]
		public string FirstName { get; set; }

		/// <summary>
		/// Instantiate a new instance of the <see cref="ReplyToHelloWorldCommand"/> class
		/// </summary>
		public ReplyToHelloWorldCommand(Guid rsn, string firstName)
		{
			Rsn = rsn;
			FirstName = firstName;
		}
	}
}
