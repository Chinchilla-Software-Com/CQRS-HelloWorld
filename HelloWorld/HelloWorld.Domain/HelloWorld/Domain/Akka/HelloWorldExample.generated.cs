
//------------------------------------------------------------------------------
// <auto-generated>
// 	This code was generated by a tool
// 	Changes to this file will be lost if the code is regenerated.
// AggregateTemplate.t4
// </auto-generated>
//------------------------------------------------------------------------------

#region Copyright
// -----------------------------------------------------------------------
// <copyright company="cdmdotnet Limited">
//     Copyright cdmdotnet Limited. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------
#endregion

using Cqrs.Domain;
using HelloWorld.Domain.Akka.Events;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using Akka.Actor;
using Cqrs.Akka.Domain;
using Cqrs.Configuration;
using cdmdotnet.Logging;
using Cqrs.Snapshots;
using Cqrs.Authentication;
using Cqrs.Domain;
using HelloWorld.Domain.Akka.Events;
using HelloWorld.Domain.Akka.Commands;

namespace HelloWorld.Domain.Akka
{
	[GeneratedCode("CQRS UML Code Generator", "1.601.932")]
	public  partial class HelloWorldExample : AkkaAggregateRoot<Cqrs.Authentication.SingleSignOnToken>
	{
		public Guid Rsn
		{
			get { return Id; }
			private set { Id = value; }
		}

		public bool IsLogicallyDeleted {get; set;}

		protected IDependencyResolver DependencyResolver { get; private set; }
// ReSharper disable UnusedMember.Local
		/// <summary>
		/// A constructor for the <see cref="Cqrs.Domain.Factories.IAggregateFactory"/>
		/// </summary>
		private HelloWorldExample()
			: base(null, null, null, null, null)
		{

			// Methods
			// Relationships
			Receive<SayHelloWorldCommand>(command => Execute(SayHelloWorld, command));
			Receive<ReplyToHelloWorldCommand>(command => Execute(ReplyToHelloWorld, command));
			Receive<EndConversationCommand>(command => Execute(EndConversation, command));
		}

		/// <summary>
		/// A constructor for the <see cref="Cqrs.Domain.Factories.IAggregateFactory"/>
		/// </summary>
		private HelloWorldExample(IDependencyResolver dependencyResolver, ILogger logger)
			: this()
		{
			DependencyResolver = dependencyResolver;
			Logger = logger;
			UnitOfWork = DependencyResolver.Resolve<IUnitOfWork<Cqrs.Authentication.SingleSignOnToken>>();
			Repository = DependencyResolver.Resolve<IAkkaRepository<Cqrs.Authentication.SingleSignOnToken>>();
			CorrelationIdHelper = DependencyResolver.Resolve<ICorrelationIdHelper>();
			AuthenticationTokenHelper = DependencyResolver.Resolve<IAuthenticationTokenHelper<Cqrs.Authentication.SingleSignOnToken>>();

		}
// ReSharper restore UnusedMember.Local

		public HelloWorldExample(IDependencyResolver dependencyResolver, ILogger logger, Guid rsn)
			: this(dependencyResolver, logger)
		{
			Rsn = rsn;
		}
		public virtual void SayHelloWorld(SayHelloWorldCommand command)
		{
			SayHelloWorld(command.FirstName);
		}

		public virtual void SayHelloWorld(string firstName)
		{
			Logger.LogDebug("Entered", "HelloWorldExample/SayHelloWorld");
			HelloWorldSaid helloWorldSaidEvent = null;

			OnSayHelloWorld(firstName, ref helloWorldSaidEvent);
			if (helloWorldSaidEvent != null)
			{
				Logger.LogDebug("Pre", "HelloWorldExample/SayHelloWorld/ApplyChange/HelloWorldSaid");
				ApplyChange(helloWorldSaidEvent);
				Logger.LogDebug("Post", "HelloWorldExample/SayHelloWorld/ApplyChange/HelloWorldSaid");
			}

			Logger.LogDebug("Pre", "HelloWorldExample/SayHelloWorld/OnSayHelloWorldHandled");
			OnSayHelloWorldHandled(firstName);
			Logger.LogDebug("Post", "HelloWorldExample/SayHelloWorld/OnSayHelloWorldHandled");

			Logger.LogDebug("Exited", "HelloWorldExample/SayHelloWorld");
		}

		partial void OnSayHelloWorld(string firstName, ref HelloWorldSaid helloWorldSaidEvent);

		partial void OnSayHelloWorldHandled(string firstName);

		public virtual void ReplyToHelloWorld(ReplyToHelloWorldCommand command)
		{
			ReplyToHelloWorld(command.FirstName);
		}

		public virtual void ReplyToHelloWorld(string firstName)
		{
			Logger.LogDebug("Entered", "HelloWorldExample/ReplyToHelloWorld");
			HelloWorldRepliedTo helloWorldRepliedToEvent = null;

			OnReplyToHelloWorld(firstName, ref helloWorldRepliedToEvent);
			if (helloWorldRepliedToEvent != null)
			{
				Logger.LogDebug("Pre", "HelloWorldExample/ReplyToHelloWorld/ApplyChange/HelloWorldRepliedTo");
				ApplyChange(helloWorldRepliedToEvent);
				Logger.LogDebug("Post", "HelloWorldExample/ReplyToHelloWorld/ApplyChange/HelloWorldRepliedTo");
			}

			Logger.LogDebug("Pre", "HelloWorldExample/ReplyToHelloWorld/OnReplyToHelloWorldHandled");
			OnReplyToHelloWorldHandled(firstName);
			Logger.LogDebug("Post", "HelloWorldExample/ReplyToHelloWorld/OnReplyToHelloWorldHandled");

			Logger.LogDebug("Exited", "HelloWorldExample/ReplyToHelloWorld");
		}

		partial void OnReplyToHelloWorld(string firstName, ref HelloWorldRepliedTo helloWorldRepliedToEvent);

		partial void OnReplyToHelloWorldHandled(string firstName);

		public virtual void EndConversation(EndConversationCommand command)
		{
			EndConversation(command.FirstName);
		}

		public virtual void EndConversation(string firstName)
		{
			Logger.LogDebug("Entered", "HelloWorldExample/EndConversation");
			ConversationEnded conversationEndedEvent = null;

			OnEndConversation(firstName, ref conversationEndedEvent);
			if (conversationEndedEvent != null)
			{
				Logger.LogDebug("Pre", "HelloWorldExample/EndConversation/ApplyChange/ConversationEnded");
				ApplyChange(conversationEndedEvent);
				Logger.LogDebug("Post", "HelloWorldExample/EndConversation/ApplyChange/ConversationEnded");
			}

			Logger.LogDebug("Pre", "HelloWorldExample/EndConversation/OnEndConversationHandled");
			OnEndConversationHandled(firstName);
			Logger.LogDebug("Post", "HelloWorldExample/EndConversation/OnEndConversationHandled");

			Logger.LogDebug("Exited", "HelloWorldExample/EndConversation");
		}

		partial void OnEndConversation(string firstName, ref ConversationEnded conversationEndedEvent);

		partial void OnEndConversationHandled(string firstName);


		[GeneratedCode("CQRS UML Code Generator", "1.601.932")]
		[ServiceContract(Namespace="https://getcqrs.net/Domain/Akka/1001/")]
		public partial class HelloWorldExampleSnapshot : Snapshot
		{
			public bool IsLogicallyDeleted {get; set;}
		}
	}
}
